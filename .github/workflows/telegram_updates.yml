name: Telegram Bot Notify

on:
  push:
    branches:
      - master
  watch:
    types: [started]
  issues:
    types: [opened, closed]
  pull_request:
    types: [opened, closed, reopened]
  release:
    types: [published]

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Send Telegram Message
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
          THREAD_ID: ${{ secrets.THREAD_ID }}
        run: |
          EVENT_NAME="${{ github.event_name }}"
          ACTOR="${{ github.actor }}"
          REPO="${{ github.repository }}"
          API_URL="https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage"

          send_message() {
            curl -s -X POST $API_URL \
              -d chat_id=$CHAT_ID \
              -d message_thread_id=$THREAD_ID \
              -d text="$1" \
              -d parse_mode=Markdown
          }

          if [[ "$EVENT_NAME" == "push" ]]; then
            COMMIT_MSG="${{ github.event.head_commit.message }}"
            COMMIT_URL="${{ github.event.head_commit.url }}"
            send_message "üî® *Push* by [$ACTOR](https://github.com/$ACTOR)\n‚Ä¢ *Message:* $COMMIT_MSG\n[View Commit]($COMMIT_URL)"
          
          elif [[ "$EVENT_NAME" == "watch" ]]; then
            send_message "‚≠ê *$ACTOR* starred [${REPO}](https://github.com/${REPO})"
          
          elif [[ "$EVENT_NAME" == "issues" ]]; then
            ISSUE_ACTION="${{ github.event.action }}"
            ISSUE_TITLE="${{ github.event.issue.title }}"
            ISSUE_URL="${{ github.event.issue.html_url }}"
            send_message "üêõ *Issue $ISSUE_ACTION* by [$ACTOR](https://github.com/$ACTOR):\n‚Ä¢ *$ISSUE_TITLE*\n[View Issue]($ISSUE_URL)"
          
          elif [[ "$EVENT_NAME" == "pull_request" ]]; then
            PR_ACTION="${{ github.event.action }}"
            PR_TITLE="${{ github.event.pull_request.title }}"
            PR_URL="${{ github.event.pull_request.html_url }}"
            send_message "üîÉ *Pull Request $PR_ACTION* by [$ACTOR](https://github.com/$ACTOR):\n‚Ä¢ *$PR_TITLE*\n[View PR]($PR_URL)"

          elif [[ "$EVENT_NAME" == "release" ]]; then
            REL_NAME="${{ github.event.release.name }}"
            REL_URL="${{ github.event.release.html_url }}"
            send_message "üöÄ *New Release Published* by [$ACTOR](https://github.com/$ACTOR):\n‚Ä¢ *$REL_NAME*\n[View Release]($REL_URL)"
          fi
